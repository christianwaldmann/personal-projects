name: Pull Request to Master

on:
  pull_request:
    branches:
      - master

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    outputs:
      init-status: ${{ steps.init.outcome }}
      plan-status: ${{ steps.plan.outcome }}
      plan: ${{ steps.plan.outputs.plan }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        id: init
        run: |
          ./scripts/terraform.sh init -no-color
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          HCLOUD_DNS_TOKEN: ${{ secrets.HCLOUD_DNS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      - name: Terraform plan
        id: plan
        run: |
          terraform_plan=$(./scripts/terraform.sh plan -no-color)
          {
            echo "plan<<EOF"
            echo "$terraform_plan"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
        env:
          HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}
          HCLOUD_DNS_TOKEN: ${{ secrets.HCLOUD_DNS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

  comment:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write
    needs: terraform-plan
    steps:
      - name: Add comment
        uses: thollander/actions-comment-pull-request@v2
        env:
          INIT_STATUS: ${{ needs.terraform-plan.outputs.init-status }}
          PLAN_STATUS: ${{ needs.terraform-plan.outputs.plan-status }}
          PLAN: ${{ needs.terraform-plan.outputs.plan }}
        with:
          comment_tag: execution
          message: |
            #### Terraform Init: `$([[ ${{ env.INIT_STATUS }} == "success" ]] && echo "✅" || echo "❌")`
            #### Terraform Plan: `$([[ ${{ env.PLAN_STATUS }} == "success" ]] && echo "✅" || echo "❌")`
            
            <details>
            <summary>Show Plan</summary>
            
            ```
            ${{ env.PLAN }}
            ```
            
            </details>
